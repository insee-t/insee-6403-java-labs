#+TITLE: Insee 6403 java labs
#+CREATOR: Insee thaopech

* Lab 1
** [[./lab1/Hello.java][The Hello program]]

* Lab 2

** [[./thaopech/insee/lab2/Dealer.java][The Dealer program]]

This program accepts three arguments then processes and displays dealer information.
*** The output should be

Dealer's name : <dealerName>
Number of clients : <NumClient>
Gender : <dealerGender>


** [[./thaopech/insee/lab2/PrimitiveDataType.java][The PrimitiveDataType program]]

This program input student ID and name then processes 
*** and output the following.

Student ID : <studentNum>
First Name : <firstName>
Byte Value: number of letter in first name.
Int Value: last six digits of student ID.
Long Value: student ID without dashes or spaces.
Float Value: myByte / 100.
Double Value: last four digits of student ID / 10000.
Boolean Value: is last digits of student ID odd or not?


** [[./thaopech/insee/lab2/RockPaperScissors.java][The RockPaperScissors program]]
This program accepts two arguments then calculate logic of normal game of rock paper and scissors.
1. Rock crushes Scissors: Rock wins.
2. Scissors cut Paper: Scissors win.
3. Paper covers Rock: Paper wins.
4. If both players choose the same option, the result is a tie.
*** The output should be
Player 1 chooses: <player1>
Player 2 chooses: <player2>

If Player 1 wins: "Player 1 wins!"
If Player 2 wins: "Player 2 wins!"
If it's a tie: "It's a tie!"


** [[./thaopech/insee/lab2/SimpleStringManipulator.java][The SimpleStringManipulator program]]
This program accepts two arguments and performs simple manipulations.

**** First String Processing:
- If the first string starts with a vowel (a, e, i, o, u, case-insensitive), convert the first character to uppercase.
- Else, convert the first character to lowercase.

**** Second String Processing:
- If the second string ends with a consonant (any letter that's not a vowel, case-insensitive), convert the last character to uppercase.
- Else, convert the last character to lowercase.

**** Result String:
- Concatenate the modified first string and the modified second string.

*** The output should be

First String: <firstString>
Second String: <secString>
Resulting Sting: <result>


* [[./thaopech/insee/lab3/NumberGuessingGame.java][The NumberGuessingGame program]]

The program simulates a guessing game of which a user guesses a number from 1 to 10. The answer is randomly generated then a user enters a number via the console. 
*** Each time a number is entered, one of the following three possible outputs will be displayed. 
1. “Congratulations!”	if the number entered is the same as the answer.
2. “Try a lower number!” 	if the number entered is higher than the answer.
3. “Try a higher number!” 	if the number entered is smaller than the answer.  

*** The game ends when the user guesses the answer correctly or the user guesses the number incorrectly 5 times. 


* [[./thaopech/insee/lab3/ConfigurableNumberGuessingGame.java][The ConfigurableNumberGuessingGame program]]

The program simulates a guessing game of which a user guesses a number from <min> to <max>. The answer is randomly generated then a user enters a number via the console. 
*** Each time a number is entered, one of the following three possible outputs will be displayed. 
1. “Congratulations!”	if the number entered is the same as the answer.
2. “Try a lower number!” 	if the number entered is higher than the answer.
3. “Try a higher number!” 	if the number entered is smaller than the answer.  

- The game ends when the user guesses the answer correctly or the user guesses the number incorrectly <numOfTries> times. 

- The program asks the user to enter the min value, the max value, and the maximum number of tries.
    - The program also checks and detects configuration settings that the user may enter as following
        - The program checks whether the max value is at least equal to the min value. If not, the program will keep asking for the new max value until the max value is not less than the max value. 
        - The program checks whether the number of maximum tries is greater than 0. If not, the program will keep asking for the new maximum tries until the maximum tries is greater than 0. 
        - The program checks whether a number is outside the minimum or maximum values. If it is, the program asks the user to enter a number again and does not increment the number of tries.  


* [[./thaopech/insee/lab3/NumberGuessingGames.java][The NumberGuessingGames program]]

The program allows the user to play the [[#ConfigurableNumberGuessingGame][ConfigurableNumberGuessingGame]] several times until the user indicates that he/she wants to stop playing the game.  
- The answer will be random each time the user chooses to play again. 
- On the other hand, the program will not ask the user to config (min,max,number of tries) again.
- After the game ends, the program gives an option to play again if the user enters “y” or “Y”. If the user enters other values, the program will quit and print the message  “Thank you for playing our games. Bye!"

